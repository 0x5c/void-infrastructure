geoip_country /usr/share/GeoIP/GeoIP.dat;
# From {{ live_mirror_GeoIP_citydb_url }}
geoip_city /usr/share/GeoIP/GeoLiteCity.dat;

map $geoip_city_continent_code $closest_server {
{% for item in live_mirror_geoip_mapping %}
    {{ item.code }}  {{ item.server }};
{% endfor %}
}

map $geoip_country_code $best_server {
{% for item in live_mirror_countrycode_mapping %}
    {{ item.code }}  {{ item.server }};
{% endfor %}
}

{% if live_mirror_ssl %}
server {
{% if live_mirror_bind4 %}
{% if live_mirror_bindip is defined %}
    listen {{ live_mirror_bindip }}:{{ live_mirror_bindport }} default_server;
{% else %}
    listen {{ live_mirror_bindport }} default_server;
{% endif %}
{% endif %}
{% if live_mirror_bind6 %}
{% if live_mirror_bind6ip is defined %}
    listen [{{ live_mirror_bind6ip }}]:{{ live_mirror_bindport }} default_server;
{% else %}
    listen [::]:{{ live_mirror_bindport }} default_server;
{% endif %}
{% endif %}
    server_name {{ live_mirror_servernames | join(" ") }};
    return 301 https://$host$request_uri;
}
{% endif %}


server {
{% if live_mirror_ssl %}
{% if live_mirror_bind4 %}
{% if live_mirror_bindip is defined %}
    listen {{ live_mirror_bindip }}:443 ssl http2;
{% else %}
    listen 443 ssl http2;
{% endif %}
{% endif %}
{% if live_mirror_bind6 %}
{% if live_mirror_bind6ip is defined %}
    listen [{{ live_mirror_bindip }}]:443 ssl http2;
{% else %}
    listen [::]:443 ssl http2;
{% endif %}
{% endif %}
    server_name {{ live_mirror_servernames | join(" ") }};
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
{% if live_mirror_letsencrypt %}
    ssl_certificate /etc/letsencrypt/live/{{ live_mirror_cert_domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ live_mirror_cert_domain }}/privkey.pem;
{% else %}
    ssl_certificate {{ live_mirror_cert_path }};
    ssl_certificate_key {{ live_mirror_certkey_path }};
{% endif %}
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/nginx/live_mirror_dhparam.pem;

    # intermediate configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

{% if live_mirror_hsts %}
    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;
{% endif %}

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/ssl/cert.pem;

    resolver {{ live_mirror_resolver }};

{% else %}
{% if live_mirror_bind4 %}
{% if live_mirror_bindip is defined %}
    listen {{ live_mirror_bindip }}:{{ live_mirror_bindport }} default_server;
{% else %}
    listen {{ live_mirror_bindport }} default_server;
{% endif %}
{% endif %}
{% if live_mirror_bind6 %}
{% if live_mirror_bind6ip is defined %}
    listen [{{ live_mirror_bind6ip }}]:{{ live_mirror_bindport }} default_server;
{% else %}
    listen [::]:{{ live_mirror_bindport }} default_server;
{% endif %}
{% endif %}
    server_name {{ live_mirror_servernames | join(" ") }};
{% endif %}

    access_log {{ live_mirror_accesslog }};

{% for host in live_mirror_authoritative_servernames %}
    if ($host ~* {{ host }}) {
        set $best_server {{ host }};
    }

{% endfor %}
    if ($best_server != $host) {
        rewrite ^ $scheme://$best_server$request_uri?country=$geoip_country_code break;
    }

    location / {
        root {{ live_mirror_srvdir }};
        autoindex on;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;

    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
